export const com = [
    // {
    //     question: "운영체제의 기능과 목적",
    //     answer: `운영체제의 기능
    //             프로세스, 기억장치, 주변장치, 파일 등의 관리가 주요 기능이다.
    //             하드웨어 공동 사용 및 자원의 스케줄링을 수행한다.
    //             반드시 설치되어야 하는 가장 대표적인 시스템 소프트웨어이다.
    //             편리한 인터페이스 제공한다.
    //             데이터 및 자원 공유 기능 제공한다.\n
    //             운영체제의 목적
    //             성능 평가 요소(평가 항목)라고도 부른다.
    //             처리능력, 응답 시간, 사용 가능도, 신뢰도가 있다.(신.사.처.응)
    //             신뢰도↑ / 사용 가능도↑ / 처리 능력↑ / 응답 시간↓`
    // },
    // {
    //     question: "바로 가기 키",
    //     answer: `Window에서 사용하는 바로 가기 키
    //             Ctrl + Esc = 시작 메뉴(윈도우 키)
    //             Alt + Enter = 속성 창
    //             폴더, 파일 선택 + F2 = 이름 변경
    //             폴더 + F3 = 검색
    //             폴더, 파일 선택 + Shift + F10 = 바로 가기 메뉴(마우스 우 클릭)
    //             윈도우 키 + E = 파일 탐색기
    //             Ctrl + A = 모든 파일이나 폴더 선택
    //             Enter = 선택한 항목 실행
    //             Alt + Space Bar = 활성 창의 창 조절(바로 가기) 메뉴를 표시`
    // },
    // {
    //     question: "Window의 시스템 구성",
    //     answer: `제대로 시작되지 않는 문제를 도와주는 고급 도구
    //             실행(윈도우 키 + R) - msconfig
    //             정상 모드 = 모든 장치 드라이버 및 서비스를 로드한다.
    //             진단 모드 = 기본 장치 및 서비스만 로드한다.
    //             선택 모드 = 시스템 서비스 로드, 시작 항목 로드, 원래 부팅 구성 사용`
    // },
    // {
    //     question: "NTFS 파일 시스템",
    //     answer: `New Technology File System
    //             FAT32(4GB)와 비교하여 성능 및 안전성이 우수하다.
    //             큰 오버헤드로, 400MB 이하의 볼륨에서 사용은 좋지 않다.
    //             엑세스 제어 유지하고, 제한된 계정을 지원한다.
    //             오류의 자동 복구 기능, 대용량 하드디스크 지원, 보안 강화
    //             최대 파일 크기는 16TB, 파티션(볼륨) 크기는 256TB`
    // },
    // {
    //     question: "바로 가기 아이콘",
    //     answer: `바로 가기 아이콘
    //             원본 파일이 있는 위치와 다른 위치(바탕 화면)에 만듦
    //             바로 가기 아이콘의 확장자는 *.LINK이다.
    //             하나의 원본 파일에 대해 여러개의 바로 가기 아이콘을 만들 수 있다.
    //             디스크 드라이브나 프린터 바로 가기 아이콘도 만들 수 있다.
    //             아이콘 왼쪽 아랫부분에 화살표가 포함되어 표시된다.
    //             원본 파일을 삭제하면 바로 가기 아이콘을 실행할 수 없다.
    //             하나의 바로 가기 아이콘에는 하나의 원본 파일만 연결할 수 있다.\n
    //             바로 가기 아이콘을 만드는 방법
    //             파일 선택 - Ctrl + Shit - 누른 채 다른 위치로 끌어다 놓기
    //             마우스 오른쪽 클릭 - 바로 가기 만들기 선택
    //             복사(Ctrl + C) - 바탕 화면에서 우클릭 - 바로가기 붙여넣기 선택`
    // },
    // {
    //     question: "작업 표시줄",
    //     answer: `윈도우 맨 아랫줄
    //             잠금을 설정, 작업 표시줄의 위치나 크기를 변경못하도록 할 수 있다.
    //             작업 표시줄 자동 숨기기를 설정할 수 있다.
    //             오른쪽 끝 - 바탕 화면 보기 - 바탕 화면 표시
    //             위치나 크기를 변경 가능, 크기는 화면의 1/2까지만 늘릴 수 있다.
    //             작은 아이콘으로 표시되도록 설정
    //             자동으로 숨길 것인지의 여부를 선택
    //             현재 수행 중인 프로그램(앱)들이 표시되는 부분이다.
    //             응용 프로그랩 간 작업 전환이 한 번의 클릭으로 가능하다.
    //             작업 표시줄 빈 영역 - 마우스 우클릭 - 작업 표시줄 설정
    //             작업 표시줄의 아이콘 만들기 기능은 바탕 화면에서 설정 가능
    //             시작 단추는 작업 표시줄의 고정된 것으로, 표시 여부 설정 불가능`
    // },
    // {
    //     question: "레지스트리",
    //     answer: `모든 하드웨어와 소프트웨어의 실행 정보를 관리하는 데이터베이스
    //             Windows가 작동하는 동안 지속적으로 참조된다.
    //             문제가 발생하면 시스템 부팅이 안 될 수도 있다.
    //             프로필과 관련된 부분은 NTUSER.DAT파일에 저장된다.
    //             윈도우 키 - Windows 관리 도구 - 레지스트리 편집기 - 실행
    //             윈도우 키 - Windows 시스템 - 실행 - regedit 입력 - 실행
    //             레지스트리 편집기는 regedit32.exe 이다.`
    // },
    // {
    //     question: "작업 관리자",
    //     answer: `작업 관리자
    //             실행 중인 응용 프로그램(작업)을 작업 끝내기로 종료할 수 있다.
    //             실행 중인 프로세스와 서비스를 볼 수 있다.
    //             CPU 사용 정도와 CPU 사용 현황을 확인할 수 있다.
    //             성능 탭 - CPU, 메모리, 디스크, 이더넷 성능 모니터링
    //             앱 기록 탭 - 앱의 리소스 사용량 정보 확인
    //             실행 중인 응용 프로그램의 실행 순서를 변경할 수 없다.\n
    //             바로 가기 키 
    //             Ctrl + Shift + Esc or Ctrl + Alt + Delete - 작업 관리자
    //             윈도우 키 - Windows 시스템 - 작업 관리자
    //             윈도우 키 - Windows 시스템 - 실행 - taskmgr 입력력`
    // },
    // {
    //     question: "파일, 폴더, 프린터, 드라이브 등 컴퓨터 자원의 공유",
    //     answer: `접근 권한은 사용자에 따라 다르게 설정 가능
    //             주소 표시줄에 \\localhost 입력 - 공유한 파일이나 폴더 확인
    //             파일 탐색기의 공유 기능을 이용하면, 다른 사용자와 공유 가능
    //             공유 이름 뒤에 $를 붙이면 공유 숨기기가 된다.(공유 여부 확인 불가)`
    // },
    // {
    //     question: "폴더 옵션 창",
    //     answer: `숨김 파일이나 폴더의 표시 여부를 지정할 수 있다.
    //             색인의 사용 여부를 선택할 수 있다.
    //             파일 확장명을 숨기도록 설정할 수 있다.
    //             폴더에 암호를 설정하는 기능은 지원되지 않는다.
    //             한 번만 클릭해서 창을 열 수 있도록 설정 가능
    //             새 창에 폴더 열기를 설정할 수 있다.
    //             파일 탭 - 옵션 or 보기 탭 - 옵션 - 폴더 및 검색 옵션 변경
    //             보기 탭 - 창 = 탐색 창, 미리 보기 창, 세부 정보 창`
    // },
    // {
    //     question: "휴지통",
    //     answer: `휴지통
    //             하드디스트 드라이브마다 한 개씩 만들 수 있다.
    //             휴지통에 보관된 파일이나 폴더의 이름은 변경할 수 없다.
    //             휴지통에서 파일이나 폴더를 실행할 수 없다.
    //             삭제된 자료가 임시적으로 보관되는 장소로, 복원이 가능하다.
    //             복원시킬 경우, 경로를 지정하지 않아도, 자동으로 원래 위치로 복원
    //             폴더 위치는 C:\\$Recycle.Bin 이다.\n
    //             휴지통에서 보관되지 않고 완전히 삭제되는 경우
    //             USB에 저장되어 있는 파일을 Delete로 삭제한 경우
    //             네트워크 드라이브의 파일을 바로 가기 메뉴의 삭제를 클릭한 경우
    //             홈 탭 - 구성 그룹 - 삭제 - 완전히 삭제
    //             휴지통 비우기를 한 경우
    //             Shift - Delete로 삭제한 경우
    //             휴지통 속성 - 파일을 휴지통에 버리지 않고 삭제할 때 바로 제거
    //             같은 이름의 항목을 복사/이동 작업으로 덮어쓴 경우
    //             휴지통의 크기는 MB 단위로 설정
    //             휴지통에서 복사는 지원되지 않으나, 잘라내기는 가능하다.`
    // },
    // {
    //     question: "OLE(Object Linking and Embedding)",
    //     answer: `데이터와 데이터를 연결하여 원본데이터를 수정할 때, 함께 수정되도록.
    //             그린 그림을 연결하여 수정할 경우, 문선 편집기의 그림도 같이 수정.
    //             개체(Object), 연결(Linking), 포함(Embedding)`
    // },
    // {
    //     question: "메모장",
    //     answer: `확장자는 기본적으로 *.TXT 이다.
    //             문자열을 찾을 수 있는 찾기 기능이 있다.
    //             현재 시간/날씨를 삽입하는 기능이 있다.
    //             웹 페이지용 HTML 문서를 만들 때 사용.
    //             파일의 크기와 상관없이 편집과 저장이 가능하다.
    //             문서의 첫줄에 .LOG를 입력 후 저장, 다시 열면 시간과 날짜가 자동 삽입
    //             시간, 날짜 삽입 바로 가기 키 = F5
    //             윈도우 키 - Windows 보조프로그램 - 메모장 - 실행
    //             윈도우 키 - Windows 시스템 - 실행 - notepad 입력
    //             보기 - 상태 표시줄 실행, 하단에 현재 라인과 컬럼 번호 확인 가능
    //             용지 크기, 용지 출력 방향, 여백, 머리글, 바닥글 변경 가능
    //             ASCII 형식의 문자열을 작성하여 저장
    //             그림, 차트 등의 OLE 개체는 삽입할 수 없다.`
    // },
    // {
    //     question: "기본 프린터",
    //     answer: `컴퓨터가 자동으로 문서를 보내는 프린터이다.
    //             기본 프린터는 한 대만 지정할 수 있다.
    //             현재 기본 프린터를 다른 프린터로 변경 가능하다.
    //             기본 프린터로 설정된 프린터도 삭제할 수 있다.
    //             인쇄 관리자는 인쇄 순서 변경, 취소, 일시 중지 작업 수행 가능.
    //             인쇄 완료 전, 다른 문서 인쇄를 실행하면, 인쇄 대기열에 쌓인다.
    //             USB프린터는 연결하면 자동으로 설치.
    //             인쇄 작업에 들어간 것도 중간에 강제로 종료할 수 있다.`
    // },
    // {
    //     question: "개인 설정",
    //     answer: `설정(윈도우 키 + I) - 개인 설정 클릭
    //             바탕 화면의 배경, 창 색, 소리 등을 변경할 수 있는 테마 선택.
    //             바탕 화면의 배경 이미지를 변경할 수 있다.
    //             화면 보호기를 설정할 수 있다.
    //             배경, 색, 잠금화면, 테마, 글꼴, 시작, 작업 표시줄 설정 가능.
    //             바탕 화면에 가젯(시계, 일정, 날씨) 표시는 지원되지 않는다.`
    // },
    // {
    //     question: "시스템 - 정보",
    //     answer: `Windows의 버전과 시스템에 대한 기본 정보 확인 가능
    //             제품키 변경 가능
    //             사용자 컴퓨터 이름 변경 가능
    //             사항, 장치 사양(CPU(프로세서), RAM) 등을 알 수 있다.
    //             시스템 - 정보는 ms-settings:about로 실행 가능
    //             설정은 ms-settings:로 실행 가능
    //             설정 - 앱 - 앱 및 기능 에서 앱 제거 가능`
    // },
    // {
    //     question: "계정",
    //     answer: `관리자 계정의 사용자는 다른 계정의 컴퓨터 사용 시간 제어 가능.
    //             관리자 계정의 사용자는 다른 계정의 유형, 이름, 암호 변경 가능.
    //             표준 계정의 사용자는 대부분 프로그램 사용 및 자신의 암호 설정 가능.
    //             표준 계정의 사용자는 다른 사용자, 보안에 영향을 주는 설정 변경 불가.`
    // },
    // {
    //     question: "네트워크 명령어 - tracert",
    //     answer: `trace(추천) + root(경로) 
    //             IP주소, 목적지 까지 거치는 경로의 수 확인.
    //             각 구간 사이의 데이터 왕복 속도 확인.
    //             인터넷 속도가 느릴 때, 어느 구간에서 정체를 일으키는지 확인.
    //             컴퓨터의 경로(라우팅 경로)를 추척할 때 사용\n
    //             형식 = C:\\>tracert [목적지 IP / URL 주소]
    //             사용 예시 = C:\\tracert www.naver.com
    //             ipconfig = 자신의 컴퓨터 IP 주소 확인.
    //             ping = 네트워크의 현재 상태나 다른 컴퓨터의 네트워크 접속 여부 확인.
    //             finger = 특정 네트워크에 접속된 사용자의 정보 확인.
    //             netstat = 자신의 컴퓨터에 연결된 다른 컴퓨터의 IP주소, 포트정보 확인
    //             %ping은 접속 여부(간단), netstat는 주소 및 포트 정보(상세)%`
    // },
    // {
    //     question: "ASCII 코드",
    //     answer: `3Zone비트와 4Digit 비트로 하나의 문자를 표현(7비트)
    //             데이터 통신용으로 사용, 128가지 문자를 표현(2^7)
    //             확장 ASCII코드는 8비트를 사용.
    //             데이터 처리 및 통신 시스템 상호간의 정보 교환.\n
    //             BCD 코드 = 6비트, 영문 대소문자 구별 불가.
    //             EBCDID 코드 = 확장 BCD코드, 4Zone비트와 4Digit비트(8비트)
    //             유니코드 = 2바이트, 국제 표준 코드, 16비트
    //             해밍코드 = 2비트의 에러 검출 비트 및 1비트의 에러 교정 비트`
    // },
    // {
    //     question: "자료의 구성 단위",
    //     answer: `데이터베이스 = 관련된 데이터 파일들의 집합(중복 제거)
    //             워드 = 한 번에 처리할 수 있는 명령 단위
    //             바이트 = 8개의 비트가 모여 구성(2^8)
    //             니블 = 4개의 비트가 모여 구성(2^4)
    //             일반적으로 열문자나 숫자는 1바이트로 표현
    //             일반적으로 한글 및 한자는 2바이트로 표현
    //             비트 < 니블 < 바이트 < 워드 < 필드 < 레코드 < 파일 < 데이터베이스
    //             데이터의 논리적 단위는 필드, 레코드, 파일, 데이터베이스 이다.`
    // },
    {
        question: "레지스터(기억)",
        answer: `레지스터
                CPU에서 명령이나 연산 결과 값을 일시적으로 저장하는 임시 기억 장소
                크기는 한 번에 처리 가능한 워드 크기 및 메모리 용량과 관계 있음.
                메모리 중에서 레지스터가 가장 속도가 빠르다.
                레지스터 > 캐시 메모리 > 주기억 장치 > 보조 기억 장치(레.캐.주.보)\n
                제어 장치를 구성하는 레지스터
                명령 레지스터(IR) = 현재 실행 중인 명령을 기억.
                \n
                연산 장치를 구성하는 레지스터
                `
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },
    {
        question: "",
        answer: ``
    },

]

export const spread = [
    {
        question: "프로그래밍이란?",
        answer: "컴"
    },
    {
        question: "프로그래밍이란?",
        answer: "컴"
    },
]